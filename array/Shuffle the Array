Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].
Return the array in the form [x1,y1,x2,y2,...,xn,yn].

 class Solution:
    def shuffle(self, nums: List[int], n: int) -> List[int]:
        i = 0
        j = n
        res = []
        while i < n and j <= len(nums):
            res.append(nums[i])
            res.append(nums[-j])
            i += 1
            j -= 1
        return res

1. Set indices i and j to 0 and n respectively.
2. Iterate while i is less than n and j is within nums length.
3. Append nums[i] and nums[-j] to the result list res.
4. Increment i and decrement j.
5. Return the shuffled list res containing interleaved elements from the first and second halves of nums.
